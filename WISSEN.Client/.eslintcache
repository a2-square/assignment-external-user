[{"/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/index.js":"1","/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/App.js":"2","/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/store/index.js":"3","/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/store/combineReducers.js":"4","/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/main/Landing/index.js":"5","/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/main/Dashboard/index.js":"6","/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/main/Landing/store/actions/index.js":"7","/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/main/Login/store/actions/index.js":"8","/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/main/Dashboard/store/actions/index.js":"9","/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/main/Login/store/reducers/index.js":"10","/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/main/Login/index.js":"11","/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/api/apiUtils.js":"12","/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/api/apiConfig.js":"13","/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/main/Dashboard/store/reducers/index.js":"14","/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/main/Dashboard/components/externalUser.js":"15","/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/main/Common/store/actions/index.js":"16","/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/main/Common/components/header.js":"17"},{"size":326,"mtime":1607174592661,"results":"18","hashOfConfig":"19"},{"size":641,"mtime":1607242772416,"results":"20","hashOfConfig":"19"},{"size":1060,"mtime":1607174592661,"results":"21","hashOfConfig":"19"},{"size":379,"mtime":1607249501028,"results":"22","hashOfConfig":"19"},{"size":6198,"mtime":1607237388991,"results":"23","hashOfConfig":"19"},{"size":1664,"mtime":1607253968018,"results":"24","hashOfConfig":"19"},{"size":550,"mtime":1607237354431,"results":"25","hashOfConfig":"19"},{"size":1390,"mtime":1607249746135,"results":"26","hashOfConfig":"19"},{"size":656,"mtime":1607248467663,"results":"27","hashOfConfig":"19"},{"size":1146,"mtime":1607253961166,"results":"28","hashOfConfig":"19"},{"size":4047,"mtime":1607252381041,"results":"29","hashOfConfig":"19"},{"size":989,"mtime":1607246313432,"results":"30","hashOfConfig":"19"},{"size":189,"mtime":1607256068950,"results":"31","hashOfConfig":"19"},{"size":585,"mtime":1607253956886,"results":"32","hashOfConfig":"19"},{"size":1106,"mtime":1607253503714,"results":"33","hashOfConfig":"19"},{"size":275,"mtime":1607243942960,"results":"34","hashOfConfig":"19"},{"size":2895,"mtime":1607253952854,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1finzap",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/index.js",[],["73","74"],"/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/App.js",[],"/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/store/index.js",[],"/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/store/combineReducers.js",[],"/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/main/Landing/index.js",[],"/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/main/Dashboard/index.js",["75"],"import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Grid } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport * as DashboardAction from 'main/Dashboard/store/actions'\nimport Header from \"main/Common/components/header\"\nimport ExternalUser from \"main/Dashboard/components/externalUser\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex'\n    },\n    gridRoot: {\n        marginTop: theme.spacing(8),\n        padding: 20\n    },\n}));\n\nconst Dashboard = React.memo(({ externalUser, ...props }) => {\n    const classes = useStyles();\n    const getExternalUsers = async () => {\n        const payload = {\n            getType: 'all'\n        };\n        props.getExternalUsers(payload);\n    }\n\n    useEffect(() => {\n        getExternalUsers();\n    }, [])\n\n    return (\n        <div className={classes.root}>\n            <Header />\n            <CssBaseline />\n            <Grid container className={classes.gridRoot}>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        {externalUser.map((extUser) => (\n                            <Grid key={extUser._id} item>\n                                <ExternalUser key={extUser._id} data={extUser} />\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    );\n})\n\nconst mapStateToProps = ({ DashboardReducer }) => {\n    return {\n        externalUser: DashboardReducer.externalUser\n    }\n}\n\nexport default connect(mapStateToProps, { ...DashboardAction })(Dashboard)","/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/main/Landing/store/actions/index.js",[],"/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/main/Login/store/actions/index.js",[],"/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/main/Dashboard/store/actions/index.js",[],"/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/main/Login/store/reducers/index.js",[],"/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/main/Login/index.js",["76"],"import React, { useCallback, useState } from 'react';\nimport {\n    Avatar,\n    Button,\n    CssBaseline,\n    Typography,\n    Container\n} from '@material-ui/core';\nimport {\n    LockOutlined\n} from '@material-ui/icons';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport * as LoginAction from 'main/Login/store/actions'\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    leftAligin: {\n        left: 1,\n        position: 'absolute'\n    }\n}));\n\nconst Login = React.memo(({ login, history, currentUserDetails }) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const classes = useStyles();\n\n    // submitting the login form\n    const submitLoginForm = useCallback(\n        async (event) => {\n            try {\n                event.preventDefault();\n                await login({ email, password });\n                await currentUserDetails();\n                history.push('/dashboard');\n            } catch (e) {\n                if (e && e.message) {\n                    alert(e.message);\n                    return;\n                };\n                alert(\"Something went wrong\");\n            }\n        },\n        [email, password],\n    )\n\n    const redirectToLogin = () => {\n        history.push('/');\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <Button className={classes.leftAligin} color=\"primary\" variant=\"contained\" onClick={redirectToLogin}>Back to home</Button>\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlined />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Log in\n        </Typography>\n                <ValidatorForm className={classes.form} onSubmit={submitLoginForm}>\n                    <TextValidator\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        validators={['required', 'isEmail']}\n                        errorMessages={['This field is required', 'Invalid Email ']}\n                    />\n                    <TextValidator\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        validators={['required']}\n                        errorMessages={['This field is required']}\n                    />\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        LOGIN\n          </Button>\n\n                </ValidatorForm>\n            </div>\n        </Container>\n    );\n})\n\nconst mapStateToProps = ({ loginReducer }) => {\n    return {\n        user: loginReducer.user\n    }\n}\n\nexport default connect(mapStateToProps, { ...LoginAction })(Login)","/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/api/apiUtils.js",[],"/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/api/apiConfig.js",[],"/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/main/Dashboard/store/reducers/index.js",[],"/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/main/Dashboard/components/externalUser.js",[],"/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/main/Common/store/actions/index.js",[],"/home/ajit/Documents/Project/Assignment-Test/wissen-assignment/WISSEN.Client/src/main/Common/components/header.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":30,"column":8,"nodeType":"83","endLine":30,"endColumn":10,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"85","line":63,"column":9,"nodeType":"83","endLine":63,"endColumn":26,"suggestions":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getExternalUsers'. Either include it or remove the dependency array.","ArrayExpression",["89"],"React Hook useCallback has missing dependencies: 'currentUserDetails', 'history', and 'login'. Either include them or remove the dependency array. If 'login' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["90"],"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [getExternalUsers]",{"range":"95","text":"96"},"Update the dependencies array to be: [currentUserDetails, email, history, login, password]",{"range":"97","text":"98"},[854,856],"[getExternalUsers]",[1708,1725],"[currentUserDetails, email, history, login, password]"]